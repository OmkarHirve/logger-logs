{
  "name": "logger-logs",
  "displayName": "Logger logs",
  "description": "Write any kind of logs on the go",
  "version": "1.0.0",
  "publisher": "Yash Vaghvani",
  "engines": {
    "vscode": "^1.19.0"
  },
  "categories": [
    "Other"
  ],
  "icon": "images/icon.png",
  "activationEvents": [
    "onCommand:loggerLogs.displayInfoLogMessage",
    "onCommand:loggerLogs.displayLogMessage",
    "onCommand:loggerLogs.displayWarningLogMessage",
    "onCommand:loggerLogs.displayErrorLogMessage",
    "onCommand:loggerLogs.commentAllLogMessages",
    "onCommand:loggerLogs.uncommentAllLogMessages",
    "onCommand:loggerLogs.deleteAllLogMessages"
  ],
  "main": "./loggerLogs",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Logger logs Configuration",
      "properties": {
        "loggerLogs.wrapLogMessage": {
          "type": "boolean",
          "default": false,
          "description": "Determine if the log message should be wrapped or not."
        },
        "loggerLogs.logMessagePrefix": {
          "type": "string",
          "default": "LL",
          "description": "The prefix of the log message."
        },
        "loggerLogs.addSemicolonInTheEnd": {
          "type": "boolean",
          "default": false,
          "description": "Whether to add or not a semicolon in the end of the log message."
        },
        "loggerLogs.insertEnclosingClass": {
          "type": "boolean",
          "default": true,
          "description": "Whether to insert or not the enclosing class of the selected variable in the log message."
        },
        "loggerLogs.insertEnclosingFunction": {
          "type": "boolean",
          "default": true,
          "description": "Whether to insert or not the enclosing function of the selected variable in the log message."
        },
        "loggerLogs.quote": {
          "type": "string",
          "enum": [
            "\"",
            "'",
            "`"
          ],
          "default": "\"",
          "description": "Double quotes, single quotes or backtick"
        },
        "loggerLogs.loggerName": {
          "type": "string",
          "default": "logger",
          "description": "The name/type of the logger."
        }
      }
    },
    "commands": [
      {
        "command": "loggerLogs.displayInfoLogMessage",
        "title": "Logger logs: Display Info Log Message"
      },
      {
        "command": "loggerLogs.displayErrorLogMessage",
        "title": "Logger logs: Display Error Log Message"
      },
      {
        "command": "loggerLogs.displayWarningLogMessage",
        "title": "Logger logs: Display Warning Log Message"
      },
      {
        "command": "loggerLogs.displayLogMessage",
        "title": "Logger logs: Display Log Message"
      },
      {
        "command": "loggerLogs.commentAllLogMessages",
        "title": "Logger logs: Comment All Log Messages"
      },
      {
        "command": "loggerLogs.uncommentAllLogMessages",
        "title": "Logger logs: Uncomment All Log Messages"
      },
      {
        "command": "loggerLogs.deleteAllLogMessages",
        "title": "Logger logs: Delete All Log Messages"
      }
    ],
    "keybindings": [
      {
        "command": "loggerLogs.displayInfoLogMessage",
        "key": "ctrl+alt+shift+i",
        "mac": "ctrl+shift+i"
      },
      {
        "command": "loggerLogs.displayErrorLogMessage",
        "key": "ctrl+alt+shift+y",
        "mac": "ctrl+shift+y"
      },
      {
        "command": "loggerLogs.displayWarningLogMessage",
        "key": "ctrl+alt+shift+w",
        "mac": "ctrl+shift+w"
      },
      {
        "command": "loggerLogs.commentAllLogMessages",
        "key": "alt+shift+c",
        "mac": "alt+shift+c"
      },
      {
        "command": "loggerLogs.uncommentAllLogMessages",
        "key": "alt+shift+u",
        "mac": "alt+shift+u"
      },
      {
        "command": "loggerLogs.deleteAllLogMessages",
        "key": "alt+shift+d",
        "mac": "alt+shift+d"
      },
      {
        "command": "loggerLogs.displayLogMessage",
        "key": "ctrl+alt+shift+l",
        "mac": "ctrl+shift+l"
      }
    ]
  },
  "scripts": {
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "jest --config jest.config.json"
  },
  "devDependencies": {
    "@types/node": "^7.0.43",
    "eslint": "^5.12.1",
    "eslint-config-google": "^0.11.0",
    "eslint-config-prettier": "^3.6.0",
    "eslint-config-standard": "^11.0.0-beta.0",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-node": "^6.0.0",
    "eslint-plugin-prettier": "^3.0.1",
    "eslint-plugin-promise": "^3.6.0",
    "eslint-plugin-standard": "^3.0.1",
    "jest": "^24.5.0",
    "jsdoc": "^3.5.5",
    "prettier": "^1.16.0",
    "typescript": "^2.6.1",
    "vscode": "^1.1.6"
  },
  "license": "",
  "bugs": {
    "url": "https://github.com/yashvadhvani/logger-logs/issues",
    "email": "yashvadhvani@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/yashvadhvani/logger-logs"
  }
}
